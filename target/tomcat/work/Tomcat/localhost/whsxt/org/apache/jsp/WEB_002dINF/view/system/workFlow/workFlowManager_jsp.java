/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-09-22 07:15:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.system.workFlow;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class workFlowManager_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"utf-8\">\r\n");
      out.write("\t<title>流程部署列表---仓库管理系统 2.0</title>\r\n");
      out.write("\t<meta name=\"renderer\" content=\"webkit\">\r\n");
      out.write("\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n");
      out.write("\t<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\r\n");
      out.write("\t<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\r\n");
      out.write("\t<meta name=\"format-detection\" content=\"telephone=no\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/layui/css/layui.css\" media=\"all\" />\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/css/public.css\" media=\"all\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"childrenBody\">\r\n");
      out.write("\t\t<fieldset class=\"layui-elem-field layui-field-title\">\r\n");
      out.write("    \t\t<legend>查询条件</legend>\r\n");
      out.write("\t\t</fieldset>\r\n");
      out.write("\t\t<form class=\"layui-form\"  id=\"searchForm\" method=\"post\">\r\n");
      out.write("\t\t\t\t<div class=\"layui-form-item\">\r\n");
      out.write("\t\t\t\t\t<div class=\"layui-inline\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"layui-form-label\">部署名称</label>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"layui-input-inline\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" name=\"deploymentName\" id=\"deploymentName\" autocomplete=\"off\" class=\"layui-input \" />\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"layui-inline\">\r\n");
      out.write("\t\t\t\t\t<a class=\"layui-btn search_btn\" data-type=\"reload\">搜索</a>\r\n");
      out.write("\t\t\t\t\t<button type=\"reset\" class=\"layui-btn layui-btn-warm\" >重置</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t<script type=\"text/html\"  id=\"processDeploymentToolBar\">\r\n");
      out.write("\t<a class=\"layui-btn layui-btn-xs layui-btn layui-btn-normal\" lay-event=\"add\">添加部署</a>\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<table id=\"processDeploymentList\" lay-filter=\"processDeploymentList\"></table>\r\n");
      out.write("\t<table id=\"processDefList\" lay-filter=\"processDefList\"></table>\r\n");
      out.write("\t<!--操作-->\r\n");
      out.write("\t<script type=\"text/html\" id=\"processDeploymentListBar\">\r\n");
      out.write("\t\t<a class=\"layui-btn layui-btn-xs layui-btn-danger\" lay-event=\"del\">删除</a>\r\n");
      out.write("\t\t<a class=\"layui-btn layui-btn-xs layui-btn-normal\" lay-event=\"viewProcessImge\">查看流程图</a>\r\n");
      out.write("\t</script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/layui/layui.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var tableInDeploy;\r\n");
      out.write("var tableInProcessDef;\r\n");
      out.write("layui.use(['form','layer','laydate','table','laytpl'],function(){\r\n");
      out.write("    var form = layui.form,\r\n");
      out.write("        layer = parent.layer === undefined ? layui.layer : top.layer,\r\n");
      out.write("        $ = layui.jquery,\r\n");
      out.write("        laytpl = layui.laytpl,\r\n");
      out.write("        table = layui.table;\r\n");
      out.write("   \r\n");
      out.write("    //部署列表\r\n");
      out.write("    tableInDeploy = table.render({\r\n");
      out.write("        elem: '#processDeploymentList',\r\n");
      out.write("        url : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/workFlow/queryAllProcessDeployment.action',\r\n");
      out.write("        cellMinWidth : 95,\r\n");
      out.write("        page : true,\r\n");
      out.write("        toolbar: '#processDeploymentToolBar',\r\n");
      out.write("        defaultToolbar: [],\r\n");
      out.write("        height : \"full-400\",\r\n");
      out.write("        limit : 10,\r\n");
      out.write("        limits : [10,15,20,25],\r\n");
      out.write("        id : \"processDeploymentListTable\",\r\n");
      out.write("        cols : [[\r\n");
      out.write("            {type: \"checkbox\", fixed:\"left\", width:50},\r\n");
      out.write("            {field: 'id', title: '部署ID', width:80, align:\"center\"},\r\n");
      out.write("            {field: 'name', title: '部署名称', width:230, align:\"center\"},\r\n");
      out.write("            {field: 'deploymentTime', title: '部署时间',  align:\"center\"},\r\n");
      out.write("            {title: '操作', width:180, templet:'#processDeploymentListBar',fixed:\"right\",align:\"center\"}\r\n");
      out.write("        ]]\r\n");
      out.write("    });\r\n");
      out.write("    //流程定义列表\r\n");
      out.write("    tableInProcessDef = table.render({\r\n");
      out.write("        elem: '#processDefList',\r\n");
      out.write("        url : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/workFlow/queryAllprocessDef.action',\r\n");
      out.write("        cellMinWidth : 95,\r\n");
      out.write("        page : true,\r\n");
      out.write("        toolbar: true,\r\n");
      out.write("        defaultToolbar: [],\r\n");
      out.write("        height : \"full-400\",\r\n");
      out.write("        limit : 10,\r\n");
      out.write("        limits : [10,15,20,25],\r\n");
      out.write("        id : \"processDefListTable\",\r\n");
      out.write("        cols : [[\r\n");
      out.write("            {type: \"checkbox\", fixed:\"left\", width:50},\r\n");
      out.write("            {field: 'id', title: '流程定义ID', width:80, align:\"center\"},\r\n");
      out.write("            {field: 'name', title: '定义名称', width:230, align:\"center\"},\r\n");
      out.write("            {field: 'key', title: '定义KEY', width:230, align:\"center\"},\r\n");
      out.write("            {field: 'version', title: '流程定义版本',  align:\"center\"},\r\n");
      out.write("            {field: 'deploymentId', title: '部署ID',  align:\"center\"},\r\n");
      out.write("            {field: 'resourceName', title: '资源名称[bpmn]',  align:\"center\"},\r\n");
      out.write("            {field: 'diagramResourceName', title: '资源名称[png]',  align:\"center\"}\r\n");
      out.write("        ]]\r\n");
      out.write("    });\r\n");
      out.write("    //搜索【此功能需要后台配合，所以暂时没有动态效果演示】\r\n");
      out.write("    $(\".search_btn\").on(\"click\",function(){\r\n");
      out.write("        table.reload(\"processDeploymentListTable\",{\r\n");
      out.write("            page: {\r\n");
      out.write("                curr: 1 //重新从第 1 页开始\r\n");
      out.write("            },\r\n");
      out.write("            where: {\r\n");
      out.write("            \tdeploymentName: $(\"#deploymentName\").val()//搜索的关键字\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("         table.reload(\"processDefListTable\",{\r\n");
      out.write("            page: {\r\n");
      out.write("                curr: 1 //重新从第 1 页开始\r\n");
      out.write("            },\r\n");
      out.write("            where: {\r\n");
      out.write("            \tdeploymentName: $(\"#deploymentName\").val()//搜索的关键字\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("    });\r\n");
      out.write("    //监听头工具栏事件\r\n");
      out.write("    table.on('toolbar(processDeploymentList)', function(obj){\r\n");
      out.write("      var checkStatus = table.checkStatus(obj.config.id)\r\n");
      out.write("      ,data = checkStatus.data; //获取选中的数据\r\n");
      out.write("      switch(obj.event){\r\n");
      out.write("      case 'add':\r\n");
      out.write("      \taddProcessDeployment();\r\n");
      out.write("      break;\r\n");
      out.write("      };\r\n");
      out.write("    });\r\n");
      out.write("    //添加流程部署\r\n");
      out.write("    function addProcessDeployment(){\r\n");
      out.write("        var index = layui.layer.open({\r\n");
      out.write("            title : \"添加流程部署\",\r\n");
      out.write("            //area设置弹出层大小\r\n");
      out.write("            area:[\"700px\",\"300px\"],\r\n");
      out.write("            type : 2,\r\n");
      out.write("            content : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/workFlow/toAddProcessDeployment.action\",\r\n");
      out.write("            success : function(layero, index){\r\n");
      out.write("                var body = layui.layer.getChildFrame('body', index);\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("       // layui.layer.full(index);//最大化窗口\r\n");
      out.write("        //改变窗口大小时，重置弹窗的宽高，防止超出可视区域（如F12调出debug的操作）\r\n");
      out.write("        $(window).on(\"resize\",function(){\r\n");
      out.write("            layui.layer.full(index);\r\n");
      out.write("        })\r\n");
      out.write("    }\r\n");
      out.write("    //列表操作\r\n");
      out.write("    table.on('tool(processDeploymentList)', function(obj){\r\n");
      out.write("        var layEvent = obj.event,\r\n");
      out.write("            data = obj.data;\r\n");
      out.write("        if(layEvent === 'del'){ //删除\r\n");
      out.write("            layer.confirm('确定删除此流程部署？',{icon:3, title:'提示信息'},function(index){\r\n");
      out.write("                 $.post(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/workFlow/deleteDeployment.action\",{\r\n");
      out.write("                \t deploymentId : data.id  //将需要删除的roleId作为参数传入\r\n");
      out.write("                 },function(data){\r\n");
      out.write("                \t layer.msg(data.msg);\r\n");
      out.write("                \t tableInDeploy.reload();\r\n");
      out.write("                \t tableInProcessDef.reload();\r\n");
      out.write("                    layer.close(index);\r\n");
      out.write("                 })\r\n");
      out.write("            });\r\n");
      out.write("        } else if(layEvent === 'viewProcessImge'){ //查看流程图\r\n");
      out.write("        \tviewProcessImge(data);\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    function viewProcessImge(data) {\r\n");
      out.write("    \tvar index = layui.layer.open({\r\n");
      out.write("            title : \"【\"+data.name+\"】的流程图\",\r\n");
      out.write("            //area设置弹出层大小\r\n");
      out.write("            area:[\"500px\",\"600px\"],\r\n");
      out.write("            type : 2,\r\n");
      out.write("            content : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/workFlow/toViewProcessImge.action?deploymentId=\"+data.id,\r\n");
      out.write("            success : function(layero, index){\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("       // layui.layer.full(index);//最大化窗口\r\n");
      out.write("        //改变窗口大小时，重置弹窗的宽高，防止超出可视区域（如F12调出debug的操作）\r\n");
      out.write("        $(window).on(\"resize\",function(){\r\n");
      out.write("            layui.layer.full(index);\r\n");
      out.write("        })\r\n");
      out.write("\t}\r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
